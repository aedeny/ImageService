@using Communication
@model Web.Models.Photos

@{
    ViewBag.Title = "Photos";
}
<hr/>
<h4>Photos</h4>
@if (Model.Thumbnails.Count == 0)
{
    <h2>Nothing to see here... Yet.</h2>
    <div class="mx-auto" style="width: 600px">
        <img src="/Images/family-guy-stewie.jpg" class="rounded-circle" alt="Dummy Image">
    </div>
}

@*The link attribute isn't working with the modal for some reason... Will we ever find out why? *@
@*<link href="//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">*@
<!------ Include the above in your HEAD tag ---------->
<div class="container" id="tourpackages-carousel">
    <div class="row">
        @foreach (PhotoInfo photoInfo in Model.Thumbnails)
        {
            string relativeThumbnailPath = "../Images/" + @Utils.AbsoluteToRelativePath(photoInfo.ThumbnailPath, Model.OutputDirectory);
            string relativeImagePath = "../Images/" + @Utils.AbsoluteToRelativePath(photoInfo.ImagePath, Model.OutputDirectory);
            <div class="col-sm-6 col-md-3">
                <div>
                    <img src=@relativeThumbnailPath alt="" class="rounded-circle" width="242" height="200">
                    <div align="center">
                        <h4>@photoInfo.Name</h4>
                        <p>@photoInfo.CreationDate</p>
                        <p>
                            @*<a href=@relativeImagePath id="btnView" class="btn btn-info" role="button" target="_blank">View</a>*@
                            @*<a href="" id="btnDelete" class="btn btn-danger btn-xl" role="button">Delete</a>*@
                            <input type="button" class="btn btn-info" value="View" data-toggle="modal" data-target="#ViewImageModal" data-path="@relativeImagePath"/>
                            <input type="button" class="btn btn-danger" value="Delete" data-toggle="modal" data-target="#exampleModal" data-handler="@photoInfo.ThumbnailPath"/>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div><!-- End row -->
</div><!-- End container -->
@* This code is taken from the Settings View --> Shhould it be available here as well? And if so, how? *@
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Are you sure?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this handler?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <input type="button" class="btn btn-primary" handler="" value="Yes" onclick=""/>

            </div>
        </div>
    </div>
</div>
<script>

    $('#exampleModal').on('shown.bs.modal',
        function() {
            $('#myInput').trigger('focus');
        });

    $('#exampleModal').on('show.bs.modal',
        function(event) {
            var button = $(event.relatedTarget);
            var handler = button.data('handler');
            var modal = $(this);

            // A workaround to pass JQuery parameter to Razor
            var url = '@Url.Action("Delete", "Photos", new {dirHandlerToDelete = "__param__"})';
            var replacedUrl = url.replace('__param__', handler);

            // Sets "Yes" button onclick to delete corresponding handler
            var yesButton = modal.find('.modal-footer input');
            var noButton = modal.find('.modal-footer button');
            yesButton.click(function() {
                yesButton.attr("disabled", true);
                noButton.attr("disabled", true);
                location.href = replacedUrl;
            });
        });

</script>


@* This code is taken from the Settings View --> Shhould it be available here as well? And if so, how? *@
<!-- View Image Modal -->
<div class="modal modal-dark fade" id="ViewImageModal" tabindex="-1" role="document" aria-labelledby="ViewImageModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dark modal-dialog-centered align-self-center modal-full-width" role="document">
        <div class="modal-content  modal-dark modal-full-width">
            @* TODO Float right *@
            <div class="modal-header-no-line float-right">
                <div class="mx-auto" >
                    <span class="">
                        <input type="button" class="btn btn-danger btn-lg" handler="" value="Delete" onclick=""/>
                        <input type="button" class="btn btn-secondary btn-lg" data-dismiss="modal" value="Close" aria-label="Close"/>
                    </span>
                </div>
            </div>
            <div class="modal-body align-items-center">
                <img class="mx-auto d-block" src="" alt="Test"/>
            </div>
        </div>
    </div>
</div>

<script>

    $('#ViewImageModal').on('shown.bs.modal',
        function() {
            $('#myInput').trigger('focus');
        });

    $('#ViewImageModal').on('show.bs.modal',
        function(event) {
            var button = $(event.relatedTarget);
            var path = button.data('path');
            var modal = $(this);

            // A workaround to pass JQuery parameter to Razor
            var url = '@Url.Action("Delete", "Photos", new {dirHandlerToDelete = "__param__"})';

            // Sets "Yes" button onclick to delete corresponding handler
            var image = modal.find('.modal-body img');
            image.attr("src", path);
            var yesButton = modal.find('.modal-footer input');
            var noButton = modal.find('.modal-footer button');
            yesButton.click(function() {
                yesButton.attr("disabled", true);
                noButton.attr("disabled", true);
            });
        });

</script>